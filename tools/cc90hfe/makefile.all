#
#  Shared makefile for building Cc90hfe. Requires GNU make.
#
#  Available options:
#
#     Environment variables:
#        DEBUGMODE=1       selects a debug build.
#        CONSOLEMODE=1     selects a console build (mingw32 only).
#        PROFILEMODE=1     selects a profiling build.
#        STATICLINK=1      use static linking (mingw32 only).
#        PGCC=1            use PGCC compiler switches (djgpp and mingw32 only).
#        PENTIUMONLY=1     make the library faster, but pentium-only.
#        DEBIAN=1          adapt pathes for DEBIAN build (Linux only)
#        FRENCH=1          (by default) create a french build (djgpp and mingw32 only).
#        ENGLISH=1         create an english build (djgpp and mingw32 only).
#
#     Targets: 
#        default:          build cc90hfe
#        install:          build and install cc90hfe in $(HOME)/emu/teo
#        compress:         compress the executable files (mingw32 and djgpp only).
#        all:              build, compress and install cc90hfe
#        clean:            remove objects and executable files.
#        veryclean:        remove all generated files.
#        depend:           regenerate the dependency files.
#
#  The "clean" and "veryclean" targets require a Unix-style rm command
#  to be installed, eg. from the djgpp fileutils package.
#
#  The "depend" target requires long command line support and the stream
#  editor sed to be installed. 


.PHONY: _default

_default: default

# default to gcc compiler
ifeq (default,$(origin CC))
  CC = gcc
endif

CFLAGS += -W -Wall -Werror
EXE_NAME=cc90hfe
VPATH = src
LFLAGS = -s

# ----- Files list -----

CC90HFE_SRC_FILES = \
    src/cc90.c    \
    src/hfe.c     \
    src/ini.c     \
    src/option.c  \
    src/errors.c  \
    src/encode.c  \
    src/std.c     \
    src/main.c

CC90HFE_SRC_LINUX_FILES = \
    src/linux/progress.c    \
    src/linux/serial.c      \
    src/linux/port.c        \
    src/linux/gui.c         \
    src/linux/gui/archive.c \
    src/linux/gui/extract.c \
    src/linux/gui/install.c \
    src/linux/gui/about.c   \

CC90HFE_SRC_WIN_FILES = \
    src/win/progress.c    \
    src/win/serial.c      \
    src/win/port.c        \
    src/win/gui.c         \
    src/win/gui/archive.c \
    src/win/gui/extract.c \
    src/win/gui/install.c \
    src/win/gui/about.c   \
    src/win/resource.rc


# ------ compiler flags ------ 

CC = gcc

WFLAGS = -Wall -Werror

ifdef PGCC
   OFLAGS = -O6 -ffast-math
else
ifdef PENTIUMONLY
   OFLAGS = -march=pentium -O2 -funroll-loops -ffast-math
else
   OFLAGS = -O2 -funroll-loops -ffast-math
endif
endif

# ------ object files ------

VPATH = src

COMMON_OBJ_LIST = $(basename $(notdir $(CC90HFE_SRC_FILES)))

include $(MAKEFILE_INC)

CFLAGS += -fsigned-char

ifdef UNIX_TOOLS
CFLAGS += -DUNIX_TOOL
endif

OBJ = $(addprefix $(OBJ_DIR)/, $(addsuffix .o , $(OBJ_LIST)))

CLEAN_FILES = $(OBJ) $(EXE_NAME)


$(OBJ_DIR)/%.o: %.c
	$(CC) -c $(CFLAGS) -I./include -o $@ $<


$(EXE_NAME): $(OBJ)
	$(CC) $(LFLAGS) -o $(EXE_NAME) $(OBJ) $(LIB)



# ------ target rules ------ 

.PHONY: default install compress all clean veryclean depend

default: $(EXE_NAME)
	@echo The $(DESCRIPTION) $(PLATFORM) version has been compiled.

install: $(EXE_NAME)
ifdef UNIX_TOOLS
	mv $(EXE_NAME) $(HOME)/emu/teo
else
	move $(EXE_NAME) $(subst /,\,$(HOME)/emu/teo)
endif

compress: $(EXE_NAME)
	upx $(EXE_NAME)

all: $(EXE_NAME) compress install

clean:
ifdef UNIX_TOOLS
	rm -f $(CLEAN_FILES)
else
   define RM_FILES
      $(foreach file, $(CLEAN_FILES), if exist $(subst /,\,$(file)) del $(subst /,\,$(file))
      )
   endef
	-$(RM_FILES)
endif

veryclean: clean
ifdef UNIX_TOOLS
	rm -f $(OBJ_DIR)/makefile.dep
else
	-if exist $(subst /,\,$(OBJ_DIR)/makefile.dep) del $(subst /,\,$(OBJ_DIR)/makefile.dep)
endif


# ------ automatic source dependencies ------

-include $(OBJ_DIR)/makefile.dep
