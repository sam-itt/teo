#
#  Rules for building Teo with Linux. This file is included
#  by the primary makefile, and should not be used directly.
#
#  The "depend" target uses sed.
#
#  See makefile.all for a list of the available targets.


UNIX_TOOLS = 1


# ------ compiler flags ------ 


CC = gcc

WFLAGS = -Wall -W -Werror


ifdef PGCC
   OFLAGS = -O6 -ffast-math
else
ifdef PENTIUMONLY
   OFLAGS = -march=pentium -O2 -funroll-loops -ffast-math
else
   OFLAGS = -O2 -funroll-loops -ffast-math
#   OFLAGS =  -g -O2
endif
endif


ifdef DEBUGMODE

# -- debugging build --
CFLAGS = -g -DDEBUG $(WFLAGS)
LFLAGS = -g
DESCRIPTION = debugging

else
ifdef PROFILEMODE

# -- profiling build --
CFLAGS = -pg $(WFLAGS) $(OFLAGS)
LFLAGS = -pg
DESCRIPTION = profiling

else

# -- optimised build --
CFLAGS = $(WFLAGS) $(OFLAGS)
LFLAGS = -s
DESCRIPTION = optimized

endif
endif

ifdef DEBIAN
CFLAGS += -DDEBIAN_BUILD
endif

CFLAGS += `pkg-config gtk+-2.0 --cflags`
LIB = `pkg-config gtk+-2.0 --libs`

# -- audio : ALSA by default, OSS only if required --
ifdef OSS
CFLAGS += -DOSS_AUDIO
else
CFLAGS += -DALSA_AUDIO
LIB += -lasound
endif

# ------ plateform-dependant objects and executables ------

PLATFORM = linux
EXE_NAME = teo
OBJ_DIR = obj/linux
CFLAGS += -DOS_LINUX

VPATH += src/linux

OBJ_LIST = $(COMMON_OBJ_LIST) $(basename $(notdir $(TEO_SRC_LINUX_FILES)))


# ------ special file rules ------


# ------ dependency generation -------

DEPEND_PARAMS = -MM -MG -DSCAN_DEPEND -I./include

depend:
	$(CC) $(DEPEND_PARAMS) src/*.c src/mc68xx/*.c src/linux/*.c > _depend.tmp
	sed -e "s/^[a-zA-Z0-9_\/]*\///" _depend.tmp > _depend2.tmp
	sed -e "s/^\([a-zA-Z0-9_]*\.o:\)/obj\/linux\/\1/" _depend2.tmp > obj/linux/makefile.dep
	rm _depend.tmp _depend2.tmp
